CREATE OR REPLACE VIEW VW_ALL_CLIENTS_NO_BUY AS
  -- Listar todos Clientes que não tenham realizado uma compra;
  SELECT c.* FROM SALES.customers c
    INNER JOIN o.SALES.orders o
      ON o.customer_id = c.customer_id
        AND o.order_status IS NULL OR o.order_status <> ''
        AND o.order_date is null;

CREATE OR REPLACE VIEW VW_ALL_ITEMS_NOT_BUYED AS
  --Listar os Produtos que não tenham sido comprados
  SELECT p.*, o.*, i.* FROM PRODUCTION.products p
    INNER JOIN SALES.order_items i
      ON i.productd_id = p.productd_id
        AND i.quantity > 0 OR i.quantity IS NULL
    INNER JOIN SALES.orders o
      ON o.order_id = i.order_id
        AND  o.order_status IS NULL OR o.order_status <> '';
  -- JUST FOR GARANTEEE
  WHERE p.product_id IS NOT NULL

CREATE OR REPLACE  VIEW VW_ALL_PRODUCTS_NO_STOCK AS
  -- Listar os Produtos sem Estoque;
  SELECT p.* FROM PRODUCTION.products p
    WHERE PRODUCTION.stocks.quantity > 0;

CREATE OR REPLACE VIEW VW_ALL_ITEMS_NOT_BUYED AS
  --Listar os Produtos que não tenham sido comprados
  SELECT p.*, o.*, i.* FROM PRODUCTION.products p
    INNER JOIN SALES.order_items i
      ON i.productd_id = p.productd_id
        AND i.quantity > 0 OR i.quantity IS NULL
    INNER JOIN SALES.orders o
      ON o.order_id = i.order_id
        AND  o.order_status IS NULL OR o.order_status <> '';
  -- JUST FOR GARANTEEE
  WHERE p.product_id IS NOT NULL;

CREATE OR REPLACE VIEW VW_ALL_QTY_BY_STORE AS
  -- Qual seria mais eficiente, começar pelos items ou pela loja? (Usar a menor base começando pela referencia ou a base total?) -- Crossbase (qual a indexação?)
  -- Agrupar a quantidade de vendas que uma determinada Marca por Loja.
  SELECT b.brand_name, st.store_name, COALESCE(COUNT(p.quantity),0) AS Qty_Sales FROM PRODUCTION.stores_NAMES b
    INNER JOIN PRODUCCTS.products p
      ON p.brand_id = b.brand_id_id
    INNER JOIN SALES.order_items i
      ON i.product_id = p.products_id
    INNER JOIN SALES.orders o
      ON o.order_id = i.order_id
    INNER JOIN SALES.stores.stores s
      ON s.store_id= o.store_id
  GROUP BY 
      b.brand_name, 
      st.store_name, 
      COALESCE(COUNT(p.quantity),0);

CREATE OR REPLACE VIEW VW_ALL_WKS_NOT_SELL AS 
  -- Listar os Funcionarios que não estejam relacionados a um Pedido.
    SELECT f.*  FROM SALES.staffs f
      LEFT JOIN SALES.order o
        on o.order_id IS NOT NULL;
